<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="6" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-05-07T21:37:12 IST" name="Bookstore API Tests" finished-at="2025-05-07T21:37:14 IST" duration-ms="1824">
    <groups>
      <group name="negative">
        <method signature="DeleteBookTest.testDeleteNonExistentBook()[pri:0, instance:tests.DeleteBookTest@7205765b]" name="testDeleteNonExistentBook" class="tests.DeleteBookTest"/>
        <method signature="GetBookTest.testGetNonExistentBook()[pri:0, instance:tests.GetBookTest@169e6180]" name="testGetNonExistentBook" class="tests.GetBookTest"/>
        <method signature="UpdateBookTest.testUpdateNonExistentBook()[pri:0, instance:tests.UpdateBookTest@35aea049]" name="testUpdateNonExistentBook" class="tests.UpdateBookTest"/>
      </group> <!-- negative -->
      <group name="smoke">
        <method signature="DeleteBookTest.testDeleteExistingBook()[pri:0, instance:tests.DeleteBookTest@7205765b]" name="testDeleteExistingBook" class="tests.DeleteBookTest"/>
        <method signature="GetBookTest.testGetExistingBook()[pri:0, instance:tests.GetBookTest@169e6180]" name="testGetExistingBook" class="tests.GetBookTest"/>
        <method signature="UpdateBookTest.testUpdateExistingBook()[pri:0, instance:tests.UpdateBookTest@35aea049]" name="testUpdateExistingBook" class="tests.UpdateBookTest"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2025-05-07T21:37:12 IST" name="API Validation" finished-at="2025-05-07T21:37:14 IST" duration-ms="1824">
      <class name="tests.UpdateBookTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.UpdateBookTest@35aea049]" started-at="2025-05-07T21:37:13 IST" name="setup" finished-at="2025-05-07T21:37:13 IST" duration-ms="282" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testUpdateExistingBook()[pri:0, instance:tests.UpdateBookTest@35aea049]" started-at="2025-05-07T21:37:13 IST" name="testUpdateExistingBook" description="Update existing book details" finished-at="2025-05-07T21:37:13 IST" duration-ms="56" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateExistingBook -->
        <test-method signature="testUpdateNonExistentBook()[pri:0, instance:tests.UpdateBookTest@35aea049]" started-at="2025-05-07T21:37:13 IST" name="testUpdateNonExistentBook" description="Update non-existent book" finished-at="2025-05-07T21:37:14 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateNonExistentBook -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.UpdateBookTest@35aea049]" started-at="2025-05-07T21:37:14 IST" name="tearDown" finished-at="2025-05-07T21:37:14 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.UpdateBookTest -->
      <class name="tests.DeleteBookTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.DeleteBookTest@7205765b]" started-at="2025-05-07T21:37:14 IST" name="setup" finished-at="2025-05-07T21:37:14 IST" duration-ms="252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testDeleteExistingBook()[pri:0, instance:tests.DeleteBookTest@7205765b]" started-at="2025-05-07T21:37:14 IST" name="testDeleteExistingBook" description="Delete an existing book" finished-at="2025-05-07T21:37:14 IST" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteExistingBook -->
        <test-method signature="testDeleteNonExistentBook()[pri:0, instance:tests.DeleteBookTest@7205765b]" started-at="2025-05-07T21:37:14 IST" name="testDeleteNonExistentBook" description="Delete a non-existent book" finished-at="2025-05-07T21:37:14 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteNonExistentBook -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.DeleteBookTest@7205765b]" started-at="2025-05-07T21:37:14 IST" name="tearDown" finished-at="2025-05-07T21:37:14 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.DeleteBookTest -->
      <class name="tests.GetBookTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.GetBookTest@169e6180]" started-at="2025-05-07T21:37:12 IST" name="setup" finished-at="2025-05-07T21:37:13 IST" duration-ms="1001" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testGetExistingBook()[pri:0, instance:tests.GetBookTest@169e6180]" started-at="2025-05-07T21:37:13 IST" name="testGetExistingBook" description="Get existing book details" finished-at="2025-05-07T21:37:13 IST" duration-ms="91" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetExistingBook -->
        <test-method signature="testGetNonExistentBook()[pri:0, instance:tests.GetBookTest@169e6180]" started-at="2025-05-07T21:37:13 IST" name="testGetNonExistentBook" description="Get non-existent book" finished-at="2025-05-07T21:37:13 IST" duration-ms="30" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNonExistentBook -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.GetBookTest@169e6180]" started-at="2025-05-07T21:37:13 IST" name="tearDown" finished-at="2025-05-07T21:37:13 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.GetBookTest -->
    </test> <!-- API Validation -->
  </suite> <!-- Bookstore API Tests -->
</testng-results>
